// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  USER
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  password  String
  firstName String
  lastName  String
  role      ROLE   @default(USER)
}

model eVTOLDevice {
  id              Int      @id @default(autoincrement())
  serialNo        String   @unique
  model           MODEL
  weightLimit     Float    @default(500.0)
  batteryCapacity Float    @default(100.0)
  status          STATUS   @default(IDLE)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  batteryHistory BatteryHistory[]
  medications    Medication[]
}

model Medication {
  id             Int          @unique @default(autoincrement())
  name           String
  evtolDevice    eVTOLDevice? @relation(fields: [evtol_serialNo], references: [serialNo], onDelete: Cascade, onUpdate: Cascade)
  evtol_serialNo String?
  weight         Float
  code           String       @unique
  image          String
  delivered      Boolean?     @default(false)
  createdAt      DateTime     @default(now())
}

model BatteryHistory {
  id             Int         @id @default(autoincrement())
  evtolDevice    eVTOLDevice @relation(fields: [evtol_serialNo], references: [serialNo], onDelete: Cascade, onUpdate: Cascade)
  evtol_serialNo String
  batteryLevel   Float
  createdAt      DateTime    @default(now())
}

enum MODEL {
  LIGHTWEIGHT
  MIDDLEWEIGHT
  CRUISERWEIGHT
  HEAVYWEIGHT
}

enum STATUS {
  IDLE
  LOADING
  LOADED
  DELIVERING
  DELIVERED
  RETURNING
}

enum Role {
  ADMIN
  USER
}
